---
title: "Traits vs coefficients"
author: "Masatoshi Katabuchi"
date: "`r format(Sys.time(), '%B %d, %Y')`"
fontsize: 11pt
csl: apa.csl
bibliography: [sap-comparison.bib]
crossref:
  fig-title: Fig.
  fig-prefix: Fig.
prefer-html: true
format:
  html:
    theme: coderpro
    toc: true
    toc-depth: 2
    toc-title: Contents
    embed-resources: true
    smooth-scroll: true
    highlight-style: github
  docx:
    toc: true
    number-sections: true
    highlight-style: github
---

```{r global_options, include=FALSE}
library(knitr)
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  message = FALSE,
  cache = FALSE,
  fig.align = "center",
  fig.show = "hold",
  root.dir = rprojroot::find_root('_targets.R')
)
```

```{r,include=FALSE}
library(tidyverse)
library(tarchetypes)
library(here)
library(kableExtra)
library(targets)
library(loo)
library(smatr)
library(GGally)
library(ggridges)
library(ggrepel)
library(bayesplot)
library(patchwork)
library(gtable)
source(here("R", "stan.R"))
source(here("R", "render.R"))
source(here("R", "figs.R"))
source(here("R", "data_clean.R"))
source(here("R", "traits.R"))
```

```{r}
clean_tbl <- function(x) {
  x |> janitor::clean_names() |>
    filter(str_detect(variable, "beta")) |>
    filter(q2_5 * q97_5 > 0)
}

tar_read(fit3_summary_segments_noxylem_traits_sp_log_vaf,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit3_summary_segments_noxylem_traits_sp_log_ks,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit3_summary_segments_noxylem_traits_sp_wood_density,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit3_summary_segments_noxylem_traits_sp_log_dh,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit3_summary_segments_noxylem_traits_sp_log_vf,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit3_summary_segments_noxylem_traits_sp_log_swc,
  store = here("_targets")) |>
  clean_tbl()
```

```{r}
tar_read(fit_summary_segments_noxylem_traits_log_vaf,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit_summary_segments_noxylem_traits_log_ks,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit_summary_segments_noxylem_traits_wood_density,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit_summary_segments_noxylem_traits_log_dh,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit_summary_segments_noxylem_traits_log_vf,
  store = here("_targets")) |>
  clean_tbl()

tar_read(fit_summary_segments_noxylem_traits_log_swc,
  store = here("_targets")) |>
  clean_tbl()
```


```{r}
pred_data_seg <- tar_read(trait_pred_data_noxylem_combined, store = here("_targets"))
pred_data_sp  <- tar_read(trait_pred_data_noxylem_sp_combined, store = here("_targets"))
```


![](`r here("figs/traits_sp_points_main.png")`)


```{r}
#Apply the data preparation function to segment data
  tmp_seg_wd <- prepare_plot_data(pred_data_seg[[3]]$pred_points, "a_") |> mutate(trait = "wood_density")
  tmp_seg_wd_b <- prepare_plot_data(pred_data_seg[[3]]$pred_points, "b_") |> mutate(trait = "wood_density")
  tmp_seg_swc <- prepare_plot_data(pred_data_seg[[4]]$pred_points, "a_") |> mutate(trait = "log_swc")
  tmp_seg_swc_b <- prepare_plot_data(pred_data_seg[[4]]$pred_points, "b_") |> mutate(trait = "log_swc")
  tmp_seg_dh <- prepare_plot_data(pred_data_seg[[5]]$pred_points, "a_") |> mutate(trait = "log_dh")
  tmp_seg_dh_b <- prepare_plot_data(pred_data_seg[[5]]$pred_points, "b_") |> mutate(trait = "log_dh")
  tmp_seg_vf <- prepare_plot_data(pred_data_seg[[6]]$pred_points, "a_") |> mutate(trait = "log_vf")
  tmp_seg_vf_b <- prepare_plot_data(pred_data_seg[[6]]$pred_points, "b_") |> mutate(trait = "log_vf")

  fig_data_seg <- bind_rows(
    tmp_seg_wd,
    tmp_seg_wd_b,
    tmp_seg_swc,
    tmp_seg_swc_b,
    tmp_seg_vf,
    tmp_seg_vf_b,
    tmp_seg_dh,
    tmp_seg_dh_b) |>
    mutate(trait = fct_relevel(trait, "wood_density", "log_swc", "log_dh", "log_vf")) |>
    mutate(val = case_when(
      trait == "wood_density" ~ log(wood_density),
      trait == "log_swc" ~ log_swc,
      trait == "log_dh" ~ log_dh,
      trait == "log_vf" ~ log_vf,
    ))


  # source("R/traits.R")
  p1 <- plot_data(fig_data_seg, r2_list = NULL, "a", "Segments", inner_tag = LETTERS[1:4]) +
    theme(
      axis.text.x = element_blank(),
      strip.text.x = element_blank()
    )
  p2 <- plot_data(fig_data_seg, r2_list = NULL, "b", inner_tag = LETTERS[5:8]) +
    theme(
      strip.text.x = element_blank()
    )

# Create a dummy plot which will be used only to extract the legend
  p3 <- ggplot(fig_data_seg, aes(x = val, y = mid, color = xylem_long_fct)) +
    geom_point() +
    theme_void() +
    theme(
      legend.box.margin = margin(t = 0, r = 0, b = 0, l = 0),
      legend.position = "bottom",
      legend.direction = "horizontal",
      legend.spacing.x = unit(0, "lines"),
      legend.title = element_blank())

# Extract the legend from p5
  legend <- g_legend(p3)
  x_fake_lab_seg <- prepare_x_fake_lab(fig_data_seg)

  p <- p1 + p2 + x_fake_lab_seg + legend + plot_layout(nrow = 4, ncol = 1) +
    plot_layout(heights = c(0.5, 0.5, 0.05, 0.05))

      my_ggsave(
        here("figs/test"),
        p,
        dpi = 600,
        width = 173,
        height = 100,
        units = "mm")
```

![](`r here("figs/test.png")`)

